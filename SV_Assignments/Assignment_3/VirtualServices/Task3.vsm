<?xml version="1.0" ?>

<VSModel name="Task3" version="5">

<meta>
   <create version="10.0.0" buildNumber="10.0.0.431" author="admin" date="06/19/2017" host="inbasdpc10722" />
   <lastEdited version="10.0.0" buildNumber="10.0.0.431" author="admin" date="08/16/2017" host="inbasdpc10722" />
</meta>

<id>FC9BB9A554BF11E7A8ADD8CB8A8AB1DA</id>
<IsInProject>true</IsInProject>
<sig>ZWQ9NSZ0Y3Y9NSZsaXNhdj0xMC4wLjAgKDEwLjAuMC40MzEpJm5vZGVzPS0xNjAzMzAwNzcz</sig>
<subprocess>false</subprocess>

<initState>
</initState>

<resultState>
</resultState>

<deletedProps>
</deletedProps>

<associatedResources>
<file type="rawTransactionStore">{{LISA_RELATIVE_PROJ_ROOT}}/Data/Sc2.vts</file>
<file type="session">{{LISA_RELATIVE_PROJ_ROOT}}/VirtualServices/VRScenarios/Sc2.vr2</file>
</associatedResources>
    <Node name="Virtual HTTPS Listener 8005" log=""
          type="com.itko.lisa.vse.stateful.protocol.http.HttpListenStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Parse Text as Response" > 


      <!-- Filters -->
      <Filter type="com.itko.lisa.vse.stateful.common.DataProtocolFilter">
        <valueToFilterKey>lisa.vse.request</valueToFilterKey>
<dataProtocol>com.itko.lisa.vse.stateful.protocol.rest.RestDataProtocol</dataProtocol>
<processRequests>true</processRequests>
<processResponses>false</processResponses>
<CustomFilterData>
<requestSideUnparsed>true</requestSideUnparsed>
<rules>
<rule>
<operation>PUT /rest-example/control/users/save/</operation>
</rule>
</rules>
</CustomFilterData>
      </Filter>

<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
<listenPort>8005</listenPort>
<basePath>/</basePath>
<bindOnly>false</bindOnly>
<useSSL>false</useSSL>
<sslClientAuthType>none</sslClientAuthType>
    </Node>


    <Node name="Parse Text as Response" log=""
          type="com.itko.lisa.utils.ParseTextContentNode" 
          version="1" 
          uid="9C8701BD54D511E78802D8CB8A8AB1DA" 
          think="500-1S" 
          useFilters="true" 
          quiet="true" 
          next="JDBC_unique" > 


      <!-- Filters -->
      <Filter type="com.ca.lisa.apptest.json.FilterJSONGet">
        <valueToFilterKey>lisa.Parse Text as Response.rsp</valueToFilterKey>
      <jsonPath>$.user.emailAddress</jsonPath>
      <valueProp>Email</valueProp>
      <lengthProp></lengthProp>
      </Filter>

      <Filter type="com.ca.lisa.apptest.json.FilterJSONGet">
        <valueToFilterKey>lisa.Parse Text as Response.rsp</valueToFilterKey>
      <jsonPath>$.user.firstName</jsonPath>
      <valueProp>FName</valueProp>
      <lengthProp></lengthProp>
      </Filter>

      <Filter type="com.ca.lisa.apptest.json.FilterJSONGet">
        <valueToFilterKey>lisa.Parse Text as Response.rsp</valueToFilterKey>
      <jsonPath>$.user.lastName</jsonPath>
      <valueProp>LName</valueProp>
      <lengthProp></lengthProp>
      </Filter>

      <Filter type="com.ca.lisa.apptest.json.FilterJSONGet">
        <valueToFilterKey>lisa.Parse Text as Response.rsp</valueToFilterKey>
      <jsonPath>$.user.password</jsonPath>
      <valueProp>PWD</valueProp>
      <lengthProp></lengthProp>
      </Filter>

      <Filter type="com.ca.lisa.apptest.json.FilterJSONGet">
        <valueToFilterKey>lisa.Parse Text as Response.rsp</valueToFilterKey>
      <jsonPath>$.user.username</jsonPath>
      <valueProp>UName</valueProp>
      <lengthProp></lengthProp>
      </Filter>

<text>ew0KInVzZXIiOnsNCiJlbWFpbEFkZHJlc3MiOiJoZ3R5QHRlc3QuY29tIiwNCiJmaXJzdE5hbWUiOiJ0eXVpIiwNCiJsYXN0TmFtZSI6Iml1amsiLA0KInBhc3N3b3JkIjoiaGdmciIsDQoidXNlcm5hbWUiOiJkZmVyX3BvaSINCn0NCn0=</text>
<propKey></propKey>
    </Node>


    <Node name="JDBC_unique" log=""
          type="com.itko.lisa.jdbc.JDBCNode" 
          version="1" 
          uid="5BFEBD1A558211E7BB81D8CB8A8AB1DA" 
          think="500-1S" 
          useFilters="true" 
          quiet="false" 
          next="Successfull Msg" > 

<driver>org.apache.derby.jdbc.ClientDriver</driver>
<dataSourceConnect>false</dataSourceConnect>
<jndiFactory></jndiFactory>
<jndiServerURL></jndiServerURL>
<jndiDataSourceName></jndiDataSourceName>
<connect>jdbc:derby://localhost:1528/database/lisa.db</connect>
<user>sa</user>
<password_enc>ld9d0ac04371786f10746ef181330fd0f5734bb1e7937bbf49d71ea8a70a0b342960c</password_enc>
<onSQLError>Duplicate Message</onSQLError>
<resultSet>false</resultSet>
<maxRows>-1</maxRows>
<keepOpen>false</keepOpen>
<usePool>true</usePool>
<sql>--select * from emp_utab&#13;&#10;insert into emp_utab(emailAddress, firstName, lastName, password, username) values&#13;&#10;(?,?,?,?,?)</sql>
<jdbcParam mode="IN" index="1" type="STRING" value="{{Email}}"></jdbcParam>
<jdbcParam mode="IN" index="2" type="STRING" value="{{FName}}"></jdbcParam>
<jdbcParam mode="IN" index="3" type="STRING" value="{{LName}}"></jdbcParam>
<jdbcParam mode="IN" index="4" type="STRING" value="{{PWD}}"></jdbcParam>
<jdbcParam mode="IN" index="5" type="STRING" value="{{UName}}"></jdbcParam>
<IsStoredProc>true</IsStoredProc>
    </Node>


    <Node name="Successfull Msg" log=""
          type="com.itko.lisa.test.TestNodeLogger" 
          version="1" 
          uid="4549AF89559E11E7ABB6D8CB8A8AB1DA" 
          think="500-1S" 
          useFilters="true" 
          quiet="true" 
          next="Virtual Service Execution Router" > 

<log>Record updated successfully</log>
    </Node>


    <Node name="Virtual Service Execution Router" log=""
          type="com.itko.lisa.vse.stateful.VSRouterStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="VS Image Response Selection" > 

<onerror>abort</onerror>
<script>// This script must return either an enum entry from ExecutionMode or&#13;&#10;// a string that is the name of an enum entry.  The DYNAMIC entry may&#13;&#10;// not be returned.  It will be executed for DYNAMIC execution mode&#13;&#10;// only.&#13;&#10;import com.itko.lisa.vse.ExecutionMode;&#13;&#10;&#13;&#10;return ExecutionMode.EFFICIENT;&#13;&#10;&#13;&#10;&#13;&#10;/* other values: &#13;&#10;&#9;ExecutionMode.TRACK;&#13;&#10;&#9;ExecutionMode.STAND_IN;&#13;&#10;&#9;ExecutionMode.LIVE;&#13;&#10;&#9;ExecutionMode.FAILOVER;&#13;&#10;&#9;ExecutionMode.VALIDATION;&#13;&#10;&#9;ExecutionMode.LEARNING;&#13;&#10;*/&#13;&#10;</script>
<supportedModes>
<mode>STAND_IN</mode>
<mode>LIVE</mode>
<mode>FAILOVER</mode>
<mode>LEARNING</mode>
<mode>DYNAMIC</mode>
<mode>VALIDATION</mode>
<mode>EFFICIENT</mode>
<mode>TRACK</mode>
</supportedModes>
<liveInvocationStep>Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</liveInvocationStep>
    </Node>


    <Node name="VS Image Response Selection" log=""
          type="com.itko.lisa.vse.stateful.ConversationalStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Virtual HTTPS Responder" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Image Validation, branching to Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</log>
<then>Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>VALIDATION</executionMode>
</CheckResult>

<CheckResult assertTrue="true" name="If learning" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Learning, branching to Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</log>
<then>Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>LEARNING</executionMode>
</CheckResult>

<CheckResult assertTrue="true" name="If tracking" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Transaction Tracking, branching to Virtual Service Tracking</log>
<then>Virtual Service Tracking</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>TRACK</executionMode>
</CheckResult>

<vsiSource>{{LISA_RELATIVE_PROJ_ROOT}}/VirtualServices/Images/Task3.vsi</vsiSource>
<requestPropertyName>lisa.vse.request</requestPropertyName>
<outputAsObject>true</outputAsObject>
<liveInvocationStep>Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}</liveInvocationStep>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="Virtual HTTPS Responder" log=""
          type="com.itko.lisa.vse.stateful.protocol.http.HttpRespondStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="false" 
          next="Virtual HTTPS Listener 8005" > 

<responseList>lisa.vse.response</responseList>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="Duplicate Message" log=""
          type="com.itko.lisa.test.TestNodeLogger" 
          version="1" 
          uid="7BFC0F93558411E7BB81D8CB8A8AB1DA" 
          think="500-1S" 
          useFilters="true" 
          quiet="true" 
          next="Virtual Service Execution Router" > 

<log>The record already exists</log>
    </Node>


    <Node name="Virtual HTTPS Live Invocation {{LIVE_INVOCATION_PORT}}" log=""
          type="com.itko.lisa.vse.stateful.protocol.http.HttpLiveInvocationStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Virtual HTTPS Responder" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Image Validation, branching to Virtual Service Tracking</log>
<then>Virtual Service Tracking</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>VALIDATION</executionMode>
</CheckResult>

<CheckResult assertTrue="true" name="If learning" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Learning, branching to Virtual Service Tracking</log>
<then>Virtual Service Tracking</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>LEARNING</executionMode>
</CheckResult>

<outputAsObject>true</outputAsObject>
<onExceptionStep>Live System Failure</onExceptionStep>
<requestPropertyName>lisa.vse.request</requestPropertyName>
<vseLookupStep>VS Image Response Selection</vseLookupStep>
<targetServer>{{LIVE_INVOCATION_SERVER}}</targetServer>
<targetPort>{{LIVE_INVOCATION_PORT}}</targetPort>
<hostHeaderPassThrough>false</hostHeaderPassThrough>
<useSSLToServer>false</useSSLToServer>
<useSSL>false</useSSL>
    </Node>


    <Node name="Virtual Service Tracking" log=""
          type="com.itko.lisa.vse.stateful.VSTrackingStep" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Virtual HTTPS Responder" > 

<imageResponseProperty>lisa.vse.image.response</imageResponseProperty>
<liveResponseProperty>lisa.vse.live.response</liveResponseProperty>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="Live System Failure" log=""
          type="com.itko.lisa.test.NoTransNode" 
          version="1" 
          uid="null" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="abort" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If failover" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Failover, branching to VS Image Response Selection</log>
<then>VS Image Response Selection</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>FAILOVER</executionMode>
</CheckResult>

<CheckResult assertTrue="true" name="If standing in" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Stand In, branching to Virtual HTTPS Responder</log>
<then>Virtual HTTPS Responder</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>STAND_IN</executionMode>
</CheckResult>

    </Node>


    <Node name="abort" log="The test was aborted"
          type="com.itko.lisa.test.AbortStep" 
          version="1" 
          uid="FC9BB9AB54BF11E7A8ADD8CB8A8AB1DA" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


    <Node name="fail" log=""
          type="com.itko.lisa.test.Abend" 
          version="1" 
          uid="FC9BB9A954BF11E7A8ADD8CB8A8AB1DA" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


    <Node name="end" log=""
          type="com.itko.lisa.test.NormalEnd" 
          version="1" 
          uid="FC9BB9A754BF11E7A8ADD8CB8A8AB1DA" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


</VSModel>
